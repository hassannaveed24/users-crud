import { ApiProperty } from '@nestjs/swagger';
import { IsEnum, IsEmail, IsString, IsNotEmpty, IsObject, ValidateNested, IsNumber, IsNumberString } from 'class-validator';
import { Type } from 'class-transformer';

import { UserRoles } from '../schemas/user.schema';
import { Address } from '../schemas/user.schema';

class AddressDto {
  @IsString()
  @ApiProperty()
  addressLine1: string;

  @IsString()
  @ApiProperty()
  addressLine2: string;

  @IsString()
  @ApiProperty()
  city: string;

  @IsString()
  @ApiProperty()
  state: string;

  @IsString()
  @ApiProperty()
  country: string;
}

export class CreateUserDto {
  @IsString()
  @ApiProperty({ description: 'id of 12 characters generated by cuid / @paralleldrive/cuid2', example: 'sulvi4d384av' })
  _id: string;

  @IsString()
  @ApiProperty({ example: 'Hassan Naveed' })
  name: string;

  @IsString()
  @IsEmail()
  @IsNotEmpty()
  @ApiProperty({ example: 'hassannaveed24@gmail.com' })
  email: string;

  @IsObject()
  @ValidateNested()
  @ApiProperty({ type: AddressDto })
  @Type(() => AddressDto)
  address?: Address;

  @ApiProperty({
    enum: UserRoles,
    example: UserRoles.MEMBER,
  })
  @IsEnum(UserRoles)
  role: UserRoles;

  @ApiProperty({ example: '+923415615279' })
  @IsString()
  phoneNo?: string;
}

export class FindAllQueryDto {
  @IsNumberString()
  @ApiProperty({ example: 50 })
  skip: number;

  @IsNumberString()
  @ApiProperty({ example: 10 })
  take: number;
}
